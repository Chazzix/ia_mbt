
import gradio as gr
from docx import Document

def generate_document(template, date, intervenant, client, objectif, duree, duree_deb, duree_fin):
    # Load the selected template
    doc = Document(template)
    
    # Replace placeholders with user inputs
    for paragraph in doc.paragraphs:
        if '[DATE]' in paragraph.text:
            paragraph.text = paragraph.text.replace('[DATE]', date)
        if '[INTERVENANT]' in paragraph.text:
            paragraph.text = paragraph.text.replace('[INTERVENANT]', intervenant)
        if '[CLIENT]' in paragraph.text:
            paragraph.text = paragraph.text.replace('[CLIENT]', client)
        if '[OBJECTIF]' in paragraph.text:
            paragraph.text = paragraph.text.replace('[OBJECTIF]', objectif)
        if '[DUREE]' in paragraph.text:
            paragraph.text = paragraph.text.replace('[DUREE]', duree)
        if '[DUREE_DEB]' in paragraph.text:
            paragraph.text = paragraph.text.replace('[DUREE_DEB]', duree_deb)
        if '[DUREE_FIN]' in paragraph.text:
            paragraph.text = paragraph.text.replace('[DUREE_FIN]', duree_fin)
    
    # Save the generated document
    output_path = "generated_document.docx"
    doc.save(output_path)
    
    return output_path

# Define the Gradio interface
iface = gr.Interface(
    fn=generate_document,
    inputs=[
        gr.Dropdown(["template_bon-intervention.docx"], label="Template"),
        gr.Textbox(label="Date"),
        gr.Textbox(label="Intervenant"),
        gr.Textbox(label="Client"),
        gr.Textbox(label="Objectif"),
        gr.Textbox(label="Duree"),
        gr.Textbox(label="Jour du d√©but"),
        gr.Textbox(label="Jour de fin")
    ],
    outputs=gr.File(label="Generated Document"),
    title="BI_'[CLIENT]'_'[DATE]'",
    description="Generate documents from templates by filling in the fields."
)

# Launch the interface
iface.launch()
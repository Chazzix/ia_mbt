# -*- coding: utf-8 -*-
import gradio as gr
from docx import Document
import subprocess
import sys

# Function to check and install required libraries
def check_install_libraries():
    required_libraries = ["gradio", "python-docx"]
    for lib in required_libraries:
        try:
            __import__(lib)
        except ImportError:
            subprocess.check_call([sys.executable, "-m", "pip", "install", lib])

# Check and install libraries
check_install_libraries()

def replace_text_in_runs(runs, placeholder, replacement):
    for run in runs:
        if placeholder in run.text:
            run.text = run.text.replace(placeholder, replacement)

def generate_document(template, date, intervenant, mail_intervenant, societe, nom_contact, mail_contact, duree_inter, date_deb, date_fin, obj_presta, contenu_intervention):
    doc = Document(template)

    # Paragraphs
    for paragraph in doc.paragraphs:
        replace_text_in_runs(paragraph.runs, '[DATE]', date)
        replace_text_in_runs(paragraph.runs, '[INTERVENANT]', intervenant)
        replace_text_in_runs(paragraph.runs, '[MAIL_INTERVENANT]', mail_intervenant)
        replace_text_in_runs(paragraph.runs, '[SOCIETE]', societe)
        replace_text_in_runs(paragraph.runs, '[NOM_CONTACT]', nom_contact)
        replace_text_in_runs(paragraph.runs, '[MAIL_CONTACT]', mail_contact)
        replace_text_in_runs(paragraph.runs, '[DUREE_INTER]', duree_inter)
        replace_text_in_runs(paragraph.runs, '[DATE_DEB]', date_deb)
        replace_text_in_runs(paragraph.runs, '[DATE_FIN]', date_fin)
        replace_text_in_runs(paragraph.runs, '[OBJ_PRESTA]', obj_presta)
        replace_text_in_runs(paragraph.runs, '[CONTENU_INTERVENTION]', contenu_intervention)

    # Tables
    for table in doc.tables:
        for row in table.rows:
            for cell in row.cells:
                for paragraph in cell.paragraphs:
                    replace_text_in_runs(paragraph.runs, '[DATE]', date)
                    replace_text_in_runs(paragraph.runs, '[INTERVENANT]', intervenant)
                    replace_text_in_runs(paragraph.runs, '[MAIL_INTERVENANT]', mail_intervenant)
                    replace_text_in_runs(paragraph.runs, '[SOCIETE]', societe)
                    replace_text_in_runs(paragraph.runs, '[NOM_CONTACT]', nom_contact)
                    replace_text_in_runs(paragraph.runs, '[MAIL_CONTACT]', mail_contact)
                    replace_text_in_runs(paragraph.runs, '[DUREE_INTER]', duree_inter)
                    replace_text_in_runs(paragraph.runs, '[DATE_DEB]', date_deb)
                    replace_text_in_runs(paragraph.runs, '[DATE_FIN]', date_fin)
                    replace_text_in_runs(paragraph.runs, '[OBJ_PRESTA]', obj_presta)
                    replace_text_in_runs(paragraph.runs, '[CONTENU_INTERVENTION]', contenu_intervention)

    # Headers and Footers
    for section in doc.sections:
        for paragraph in section.header.paragraphs:
            replace_text_in_runs(paragraph.runs, '[DATE]', date)
            replace_text_in_runs(paragraph.runs, '[INTERVENANT]', intervenant)
            replace_text_in_runs(paragraph.runs, '[MAIL_INTERVENANT]', mail_intervenant)
            replace_text_in_runs(paragraph.runs, '[SOCIETE]', societe)
            replace_text_in_runs(paragraph.runs, '[NOM_CONTACT]', nom_contact)
            replace_text_in_runs(paragraph.runs, '[MAIL_CONTACT]', mail_contact)
            replace_text_in_runs(paragraph.runs, '[DUREE_INTER]', duree_inter)
            replace_text_in_runs(paragraph.runs, '[DATE_DEB]', date_deb)
            replace_text_in_runs(paragraph.runs, '[DATE_FIN]', date_fin)
            replace_text_in_runs(paragraph.runs, '[OBJ_PRESTA]', obj_presta)
            replace_text_in_runs(paragraph.runs, '[CONTENU_INTERVENTION]', contenu_intervention)
        for paragraph in section.footer.paragraphs:
            replace_text_in_runs(paragraph.runs, '[DATE]', date)
            replace_text_in_runs(paragraph.runs, '[INTERVENANT]', intervenant)
            replace_text_in_runs(paragraph.runs, '[MAIL_INTERVENANT]', mail_intervenant)
            replace_text_in_runs(paragraph.runs, '[SOCIETE]', societe)
            replace_text_in_runs(paragraph.runs, '[NOM_CONTACT]', nom_contact)
            replace_text_in_runs(paragraph.runs, '[MAIL_CONTACT]', mail_contact)
            replace_text_in_runs(paragraph.runs, '[DUREE_INTER]', duree_inter)
            replace_text_in_runs(paragraph.runs, '[DATE_DEB]', date_deb)
            replace_text_in_runs(paragraph.runs, '[DATE_FIN]', date_fin)
            replace_text_in_runs(paragraph.runs, '[OBJ_PRESTA]', obj_presta)
            replace_text_in_runs(paragraph.runs, '[CONTENU_INTERVENTION]', contenu_intervention)

    output_path = f"BI_{societe}.docx"
    doc.save(output_path)
    return output_path

# Define the Gradio interface
iface = gr.Interface(
    fn=generate_document,
    inputs=[
        gr.Dropdown(["template_bon-intervention.docx"], label="Template"),
        gr.Textbox(label="Date"),
        gr.Textbox(label="Intervenant"),
        gr.Textbox(label="Mail Intervenant"),
        gr.Textbox(label="Societe"),
        gr.Textbox(label="Nom Contact"),
        gr.Textbox(label="Mail Contact"),
        gr.Textbox(label="Duree Intervention"),
        gr.Textbox(label="Date Debut"),
        gr.Textbox(label="Date Fin"),
        gr.Textbox(label="Objectif Prestation"),
        gr.Textbox(label="Contenu Intervention")
    ],
    outputs=gr.File(label="Bon d'intervention"),
    title="BON D'INTERVENTION",
    description="Generate documents from templates by filling in the fields."
)

# Launch the interface
iface.launch()
